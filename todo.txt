{-
    def uplink_test_saturate_network(self, n_txs, n_secs):

    def uplink_test_reset_mempools(self):
        params = {
            "method": "ResetMemPools",
            "params": {}
        }

    def uplink_sync_local(self, private_key, from_address, contract_addr):
        timestamp = get_time()

        hdr = SyncHeader(contract_addr)
        txb = TxContract(SyncLocal(hdr))

        r, s = hdr.sign(private_key)
        signature = pack_signature(r, s)

        tx = Transaction(txb, signature, timestamp,
                         origin=from_address)  # to_address=to_address)
        params = tx.to_dict()

        result = self._call('Transaction', params=params, endpoint='')

        if self._handle_success(result):
            return result
        else:
            raise UplinkJsonRpcError("Malformed SyncLocal", result)
